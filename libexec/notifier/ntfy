#!/bin/sh
#
# Deliver messages over ntfy.
# https://github.com/binwiederhier/ntfy
#

set -eu
. "$(dirname "$0")/../helpers.inc"

fz_check_env NTFY_HOST
fz_check_env NTFY_TOPIC
fz_check_env TASK_STATE
fz_check_env TASK_PRIORITY
fz_check_env SUBJECT

_send() {
  #case "${TASK_PRIORITY}" in
  #  1) ntfy_priority="max"     ;;
  #  2) ntfy_priority="high"    ;;
  #  3) ntfy_priority="default" ;;
  #  4) ntfy_priority="low"     ;;
  #  5) ntfy_priority="min"     ;;
  #  *) ntfy_priority="default" ;;
  #esac

  #status_tag="gray_question"
  #[ "${TASK_STATE}" = "ok" ] && status_tag="green_circle"
  #[ "${TASK_STATE}" = "fail" ] && status_tag="red_circle"

  curl -s -f --data-binary @"${DATAFILE}" \
    -H "Title: ${SUBJECT}"                \
    -H "Priority: ${TASK_PRIORITY}"       \
    "${NTFY_HOST}/${NTFY_TOPIC}"
}

DATAFILE=$(mktemp)
trap 'rm -f "${DATAFILE}"' EXIT INT HUP

timeout 0.2 cat <<EOF >"${DATAFILE}"
description:
${TASK_DESCRIPTION}

message:
${MSG}

---
${TASK_TRACE_ID}
EOF

_send
